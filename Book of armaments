while:
"//while1//eqeqxy////////endw1"
//while# condition statements //endw#
if:
"//if1//////endf1//else1///////ende1"
//if# condition statements //endf# //else# statements //ende#
for:
//firstexpr //while2 //less i 5 //plusplus i ///////// //endw2
firststatement //while# condition executionstatement //endw#
dowhile:
//do1 ////break//// //endd1 //gt //assg x //add x y 5 
//do# statements endd# condition
binaryops:
"//add//times//int5//int6//int7" => 7+5*6||5*6+7

//add leftstatement rightstatement *
//mul leftstatement rightstatement *
//div leftstatement rightstatement *
//sub leftstatement rightstatement *
//mod leftstatement(int) rightstatement(int) *
//and leftstatement rightstatement
//or leftstatement rightstatement
//less leftstatement rightstatement
//gt leftstatement rightstatement
//le leftstatement rightstatement
//ge leftstatement rightstatement
//eqeq leftstatement rightstatement
//neq leftstatement rightstatement
//cast type expression

unary ops
//unop op statement
//++ expression
//-- expression
//sizeof expression
//sizeoftype typename

postfix ops
//++pf expression
//--pf expression
//dot expression
//arrow expression

numeral
//dbl value
//int value

charactor
//char charactor

assignment
//assg destination op expression

declaration
//dec specifiers 
